08:47:09	 Server started
08:47:30	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56538
08:47:31	 >> {
  "$id": "1",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:31	 >> {
  "$id": "2",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "vision": {
    "$id": "3",
    "$type": "Isometric.Dtos.VisionDto, Isometric.Dtos",
    "Buildings": {
      "$type": "Isometric.Dtos.BuildingAreaDto[,], Isometric.Dtos",
      "$values": [
        [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ],
        [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ],
        [
          null,
          null,
          {
            "$id": "4",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": true,
            "ArePeopleHungry": true
          },
          {
            "$id": "5",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "6",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "7",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "8",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "9",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "10",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "11",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "12",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "13",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "14",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "15",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "16",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "17",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "18",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "19",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "20",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "21",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "22",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "23",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "24",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "25",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "26",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "27",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "28",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "29",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "30",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "31",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "32",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "33",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "34",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "35",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "36",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "37",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "38",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "39",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "40",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "41",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "42",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "43",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "44",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          }
        ],
        [
          null,
          null,
          {
            "$id": "45",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "46",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "47",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "48",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "49",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "50",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "51",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "52",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "53",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "54",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "55",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          }
        ],
        [
          null,
          null,
          {
            "$id": "56",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "57",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "58",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "59",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "60",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "61",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "62",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "63",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "64",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "65",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "66",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "67",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "68",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "69",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "70",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "71",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "72",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "73",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "74",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "75",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "76",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "77",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "78",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "79",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "80",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "81",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "82",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "83",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "84",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "85",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "86",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "87",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "88",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "89",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "90",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "91",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "92",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "93",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "94",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null,
          null
        ],
        [
          null,
          null,
          null,
          {
            "$id": "95",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "96",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "97",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "98",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "99",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "100",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "101",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null,
          null,
          null
        ],
        [
          null,
          null,
          null,
          null,
          null,
          null,
          {
            "$id": "102",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null,
          null,
          null,
          null,
          null,
          null
        ]
      ]
    },
    "Position": {
      "$id": "103",
      "$type": "Isometric.Core.Vectors.Vector, Isometric.Core.Vectors",
      "X": 1214,
      "Y": 30,
      "SquaredMagnitude": 1474696,
      "Magnitude": 1214.3706188804142
    }
  }
}
08:47:31	 >> {
  "$id": "104",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "105",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Additional text encountered after finished reading JSON content: {. Path '', line 7, position 1.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.JsonTextReader.Read()\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nRead\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.JsonTextReader\nBoolean Read()",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:31	 >> {
  "$id": "106",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:31	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56540
08:47:31	 >> {
  "$id": "107",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:31	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56541
08:47:31	 >> {
  "$id": "108",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:31	 >> {
  "$id": "109",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56542
08:47:32	 >> {
  "$id": "110",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "111",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56543
08:47:32	 >> {
  "$id": "112",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "113",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56544
08:47:32	 >> {
  "$id": "114",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "115",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56545
08:47:32	 >> {
  "$id": "116",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "117",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56546
08:47:32	 >> {
  "$id": "118",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "119",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56547
08:47:32	 >> {
  "$id": "120",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "121",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56548
08:47:32	 >> {
  "$id": "122",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "123",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56549
08:47:32	 >> {
  "$id": "124",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "125",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56550
08:47:32	 >> {
  "$id": "126",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "127",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56551
08:47:32	 >> {
  "$id": "128",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "129",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56552
08:47:32	 >> {
  "$id": "130",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "131",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56553
08:47:32	 >> {
  "$id": "132",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "133",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56554
08:47:32	 >> {
  "$id": "134",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "135",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56555
08:47:32	 >> {
  "$id": "136",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "137",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56556
08:47:32	 >> {
  "$id": "138",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "139",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56557
08:47:32	 >> {
  "$id": "140",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "141",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56558
08:47:32	 >> {
  "$id": "142",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "143",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56559
08:47:32	 >> {
  "$id": "144",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "145",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56560
08:47:32	 >> {
  "$id": "146",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "147",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56561
08:47:32	 >> {
  "$id": "148",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "149",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56562
08:47:32	 >> {
  "$id": "150",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "151",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56563
08:47:32	 >> {
  "$id": "152",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "153",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56564
08:47:32	 >> {
  "$id": "154",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "155",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56565
08:47:32	 >> {
  "$id": "156",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "157",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56566
08:47:32	 >> {
  "$id": "158",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "159",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56567
08:47:32	 >> {
  "$id": "160",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "161",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56568
08:47:32	 >> {
  "$id": "162",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "163",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56569
08:47:32	 >> {
  "$id": "164",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "165",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56570
08:47:32	 >> {
  "$id": "166",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "167",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 >> {
  "$id": "168",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "169",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56571
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56572
08:47:32	 >> {
  "$id": "170",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "171",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56573
08:47:32	 >> {
  "$id": "172",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "173",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56574
08:47:32	 >> {
  "$id": "174",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "175",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56575
08:47:32	 >> {
  "$id": "176",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "177",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56576
08:47:32	 >> {
  "$id": "178",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "179",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56577
08:47:32	 >> {
  "$id": "180",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "181",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56578
08:47:32	 >> {
  "$id": "182",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "183",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56579
08:47:32	 >> {
  "$id": "184",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "185",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56580
08:47:32	 >> {
  "$id": "186",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "187",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56581
08:47:32	 >> {
  "$id": "188",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "189",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56582
08:47:32	 >> {
  "$id": "190",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:32	 >> {
  "$id": "191",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:32	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56583
08:47:32	 >> {
  "$id": "192",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:33	 >> {
  "$id": "193",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:33	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56584
08:47:33	 >> {
  "$id": "194",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:33	 >> {
  "$id": "195",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:33	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56585
08:47:33	 >> {
  "$id": "196",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:33	 >> {
  "$id": "197",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:33	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56586
08:47:33	 >> {
  "$id": "198",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:33	 >> {
  "$id": "199",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:33	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56587
08:47:33	 >> {
  "$id": "200",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:33	 >> {
  "$id": "201",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:33	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56588
08:47:33	 >> {
  "$id": "202",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:33	 >> {
  "$id": "203",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:33	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56589
08:47:33	 >> {
  "$id": "204",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:33	 >> {
  "$id": "205",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:33	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56590
08:47:33	 >> {
  "$id": "206",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:33	 >> {
  "$id": "207",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:33	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56591
08:47:33	 >> {
  "$id": "208",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:33	 >> {
  "$id": "209",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:33	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56592
08:47:33	 >> {
  "$id": "210",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:33	 >> {
  "$id": "211",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:33	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56593
08:47:33	 >> {
  "$id": "212",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:33	 >> {
  "$id": "213",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:33	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56594
08:47:33	 >> {
  "$id": "214",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:33	 >> {
  "$id": "215",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:33	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56595
08:47:33	 >> {
  "$id": "216",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:33	 >> {
  "$id": "217",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:33	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56596
08:47:33	 >> {
  "$id": "218",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:33	 >> {
  "$id": "219",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:33	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56597
08:47:33	 >> {
  "$id": "220",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:33	 >> {
  "$id": "221",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:33	 >> {
  "$id": "222",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:33	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56598
08:47:33	 >> {
  "$id": "223",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:33	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56599
08:47:33	 >> {
  "$id": "224",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:33	 >> {
  "$id": "225",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:33	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56600
08:47:33	 >> {
  "$id": "226",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:33	 >> {
  "$id": "227",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:33	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56601
08:47:33	 >> {
  "$id": "228",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:33	 >> {
  "$id": "229",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:33	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56602
08:47:33	 >> {
  "$id": "230",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:33	 >> {
  "$id": "231",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:34	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56603
08:47:34	 >> {
  "$id": "232",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:34	 >> {
  "$id": "233",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:34	 >> {
  "$id": "234",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "235",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "236",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "237",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "258",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "259",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "262",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "263",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "246",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "247",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "242",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "245",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "240",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "241",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "268",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "269",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "248",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "249",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "256",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "257",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "278",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "279",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "243",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "244",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "252",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "253",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "260",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "261",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "264",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "265",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "250",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "251",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "270",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "271",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "238",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "239",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "254",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "255",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "266",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "267",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "274",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "275",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "276",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "277",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "272",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "273",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56599
08:47:34	 >> {
  "$id": "293",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "355",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "354",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:34	 >> {
  "$id": "295",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "296",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "357",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:34	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56597
08:47:34	 >> {
  "$id": "292",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "353",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "299",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "300",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "331",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "332",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56595
08:47:34	 >> {
  "$id": "302",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "303",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "301",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "356",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "291",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "294",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "304",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "305",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "313",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "315",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "311",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "312",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "337",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "338",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "280",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "281",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "330",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "361",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "288",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "289",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "297",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "298",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "290",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "358",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "325",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "326",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "282",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "283",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "327",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "359",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "284",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "285",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "316",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "317",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String jsonpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTstem.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "359",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "284",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "285",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "316",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "317",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json08:47:34	 >> {
  "$id": "318",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "319",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
raceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "335",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "336",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "333",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "334",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "306",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "307",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "339",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "340",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "341",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "342",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "320",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "321",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "286",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "287",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "343",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "344",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "350",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "351",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "322",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "352",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "328",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "329",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "323",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "324",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "349",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "360",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:34	 >> {
  "$id": "347",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "348",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56591
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56598
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56590
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56587
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56594
08:47:34	 >> {
  "$id": "345",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "346",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56600
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56596
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56601
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56589
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56583
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56586
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56592
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56588
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56593
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56585
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56582
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56579
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56563
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56575
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56578
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56574
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56584
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56580
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56570
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56566
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56577
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56565
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56581
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56572
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56564
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56576
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56568
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56567
08:47:34	 >> {
  "$id": "309",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "314",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56557
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56560
08:47:34	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56605
08:47:34	 >> {
  "$id": "308",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "310",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:36	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56606
08:47:36	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56540
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56546
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56543
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56542
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56571
08:47:36	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56553
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56562
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56555
08:47:36	 >> {
  "$id": "362",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:36	 >> {
  "$id": "363",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56558
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56573
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56559
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56551
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56547
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56569
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56556
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56554
08:47:36	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56552
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56548
08:47:36	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56544
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56550
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56561
08:47:35	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56549
08:47:36	 >> {
  "$id": "364",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:36	 >> {
  "$id": "365",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:36	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56610
08:47:36	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56538
08:47:36	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56541
08:47:36	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56611
08:47:36	 >> {
  "$id": "366",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:36	 >> {
  "$id": "367",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "vision": {
    "$id": "368",
    "$type": "Isometric.Dtos.VisionDto, Isometric.Dtos",
    "Buildings": {
      "$type": "Isometric.Dtos.BuildingAreaDto[,], Isometric.Dtos",
      "$values": [
        [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ],
        [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ],
        [
          null,
          null,
          {
            "$id": "369",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": true,
            "ArePeopleHungry": true
          },
          {
            "$id": "370",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "371",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "372",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "373",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "374",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "375",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "376",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "377",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "378",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "379",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "380",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "381",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "382",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "383",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "384",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "385",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "386",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "387",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "388",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "389",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "390",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "391",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "392",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "393",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "394",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "395",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "396",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "397",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "398",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "399",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "400",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "401",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "402",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "403",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "404",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "405",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "406",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "407",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "408",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "409",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          }
        ],
        [
          null,
          null,
          {
            "$id": "410",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "411",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "412",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "413",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "414",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "415",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "416",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "417",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "418",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "419",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "420",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          }
        ],
        [
          null,
          null,
          {
            "$id": "421",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "422",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "423",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "424",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "425",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "426",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "427",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "428",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "429",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "430",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
       08:47:37	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56545
 ],
        [
          null,
          null,
          {
            "$id": "431",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "432",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "433",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "434",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "435",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "436",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "437",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "438",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "439",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "440",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "441",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "442",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "443",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "444",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "445",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "446",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "447",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "448",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "449",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "450",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "451",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "452",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "453",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "454",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "455",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "456",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "457",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "458",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "459",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null,
          null
        ],
        [
          null,
          null,
          null,
          {
            "$id": "460",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "461",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "462",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "463",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "464",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "465",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "466",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null,
          null,
          null
        ],
        [
          null,
          null,
          null,
          null,
          null,
          null,
          {
            "$id": "467",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null,
          null,
          null,
          null,
          null,
          null
        ]
      ]
    },
    "Position": {
      "$id": "468",
      "$type": "Isometric.Core.Vectors.Vector, Isometric.Core.Vectors",
      "X": 1214,
      "Y": 30,
      "SquaredMagnitude": 1474696,
      "Magnitude": 1214.3706188804142
    }
  }
}
08:47:37	 >> {
  "$id": "469",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "vision": {
    "$id": "470",
    "$type": "Isometric.Dtos.VisionDto, Isometric.Dtos",
    "Buildings": {
      "$type": "Isometric.Dtos.BuildingAreaDto[,], Isometric.Dtos",
      "$values": [
        [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ],
        [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ],
        [
          null,
          null,
          {
            "$id": "471",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": true,
            "ArePeopleHungry": true
          },
          {
            "$id": "472",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "473",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "474",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "475",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "476",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "477",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "478",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "479",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "480",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "481",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "482",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "483",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "484",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "485",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "486",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "487",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "488",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "489",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "490",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "491",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "492",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "493",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "494",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "495",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "496",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "497",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "498",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "499",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "500",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "501",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "502",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "503",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "504",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "505",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "506",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "507",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "508",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "509",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "510",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "511",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          }
        ],
        [
          null,
          null,
          {
            "$id": "512",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "513",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "514",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "515",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "516",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "517",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "518",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "519",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "520",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "521",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "522",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          }
        ],
        [
          null,
          null,
          {
            "$id": "523",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "524",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "525",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "526",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "527",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "528",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "529",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "530",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "531",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "532",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "533",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "534",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "535",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "536",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "537",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "538",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "539",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "540",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "541",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "542",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "543",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "544",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "545",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "546",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "547",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "548",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "549",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "550",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "551",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "552",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "553",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "554",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "555",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "556",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "557",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "558",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "559",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "560",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "561",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null,
          null
        ],
        [
          null,
          null,
          null,
          {
            "$id": "562",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "563",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "564",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "565",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "566",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "567",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "568",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null,
          null,
          null
        ],
        [
          null,
          null,
          null,
          null,
          null,
          null,
          {
            "$id": "569",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null,
          null,
          null,
          null,
          null,
          null
        ]
      ]
    },
    "Position": {
      "$id": "570",
      "$type": "Isometric.Core.Vectors.Vector, Isometric.Core.Vectors",
      "X": 1214,
      "Y": 30,
      "SquaredMagnitude": 1474696,
      "Magnitude": 1214.3706188804142
    }
  }
}
08:47:37	 >> {
  "$id": "571",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "vision": {
    "$id": "572",
    "$type": "Isometric.Dtos.VisionDto, Isometric.Dtos",
    "Buildings": {
      "$type": "Isometric.Dtos.BuildingAreaDto[,], Isometric.Dtos",
      "$values": [
        [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ],
        [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ],
        [
          null,
          null,
          {
            "$id": "573",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": true,
            "ArePeopleHungry": true
          },
          {
            "$id": "574",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "575",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "576",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "577",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "578",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "579",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "580",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "581",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "582",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "583",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "584",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "585",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "586",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "587",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "588",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "589",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "590",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "591",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "592",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "593",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "594",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "595",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "596",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "597",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "598",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "599",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "600",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "601",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "602",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "603",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "604",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "605",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "606",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "607",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "608",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "609",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "610",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "611",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "612",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "613",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          }
        ],
        [
          null,
          null,
          {
            "$id": "614",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "615",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "616",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "617",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "618",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "619",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "620",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "621",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "622",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "623",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "624",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          }
        ],
        [
          null,
          null,
          {
            "$id": "625",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "626",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "627",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "628",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "629",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "630",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "631",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "632",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "633",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "634",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "635",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "636",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "637",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "638",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "639",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "640",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "641",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "642",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "643",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "644",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "645",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "646",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "647",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "648",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "649",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "650",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "651",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "652",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "653",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "654",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "655",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "656",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "657",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "658",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "659",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "660",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "661",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "662",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "663",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null,
          null
        ],
        [
          null,
          null,
          null,
          {
            "$id": "664",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "665",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "666",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "667",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "668",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "669",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "670",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null,
          null,
          null
        ],
        [
          null,
          null,
          null,
          null,
          null,
          null,
          {
            "$id": "671",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null,
          null,
          null,
          null,
          null,
          null
        ]
      ]
    },
    "Position": {
      "$id": "672",
      "$type": "Isometric.Core.Vectors.Vector, Isometric.Core.Vectors",
      "X": 1214,
      "Y": 30,
      "SquaredMagnitude": 1474696,
      "Magnitude": 1214.3706188804142
    }
  }
}
08:47:37	 >> {
  "$id": "673",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "world width": 2048
}
08:47:37	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56612
08:47:37	 >> {
  "$id": "674",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:37	 >> {
  "$id": "675",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:37	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56613
08:47:37	 >> {
  "$id": "676",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:37	 >> {
  "$id": "677",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:37	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56614
08:47:37	 >> {
  "$id": "678",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:37	 >> {
  "$id": "679",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:37	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56615
08:47:37	 >> {
  "$id": "680",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:37	 >> {
  "$id": "681",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:37	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56616
08:47:37	 >> {
  "$id": "682",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:37	 >> {
  "$id": "683",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:37	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56617
08:47:37	 >> {
  "$id": "684",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:37	 >> {
  "$id": "685",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:37	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56618
08:47:37	 >> {
  "$id": "686",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:37	 >> {
  "$id": "687",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:37	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56619
08:47:37	 >> {
  "$id": "688",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:37	 >> {
  "$id": "689",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:37	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56620
08:47:37	 >> {
  "$id": "690",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:37	 >> {
  "$id": "691",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:37	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56621
08:47:37	 >> {
  "$id": "692",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:37	 >> {
  "$id": "693",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:37	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56622
08:47:37	 >> {
  "$id": "694",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:37	 >> {
  "$id": "695",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:37	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56623
08:47:37	 >> {
  "$id": "696",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:37	 >> {
  "$id": "697",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:37	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56624
08:47:37	 >> {
  "$id": "698",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:37	 >> {
  "$id": "699",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:37	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56625
08:47:37	 >> {
  "$id": "700",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:37	 >> {
  "$id": "701",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:37	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56626
08:47:37	 >> {
  "$id": "702",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "703",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 >> {
  "$id": "704",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56627
08:47:38	 >> {
  "$id": "705",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56628
08:47:38	 >> {
  "$id": "706",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "707",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56629
08:47:38	 >> {
  "$id": "708",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "709",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56630
08:47:38	 >> {
  "$id": "710",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "711",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56631
08:47:38	 >> {
  "$id": "712",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "713",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56632
08:47:38	 >> {
  "$id": "714",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "715",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56633
08:47:38	 >> {
  "$id": "716",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "717",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56634
08:47:38	 >> {
  "$id": "718",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "719",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56635
08:47:38	 >> {
  "$id": "720",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "721",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 >> {
  "$id": "722",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56636
08:47:38	 >> {
  "$id": "723",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56637
08:47:38	 >> {
  "$id": "724",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "725",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56638
08:47:38	 >> {
  "$id": "726",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "727",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56639
08:47:38	 >> {
  "$id": "728",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "729",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56640
08:47:38	 >> {
  "$id": "730",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "731",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56641
08:47:38	 >> {
  "$id": "732",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "733",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56642
08:47:38	 >> {
  "$id": "734",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "735",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56643
08:47:38	 >> {
  "$id": "736",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "737",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56644
08:47:38	 >> {
  "$id": "738",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "739",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56645
08:47:38	 >> {
  "$id": "740",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "741",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56646
08:47:38	 >> {
  "$id": "742",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "743",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56647
08:47:38	 >> {
  "$id": "744",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "745",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56648
08:47:38	 >> {
  "$id": "746",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "747",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56649
08:47:38	 >> {
  "$id": "748",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "749",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56650
08:47:38	 >> {
  "$id": "750",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "751",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56651
08:47:38	 >> {
  "$id": "752",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "753",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56652
08:47:38	 >> {
  "$id": "754",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "755",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56653
08:47:38	 >> {
  "$id": "756",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "757",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56654
08:47:38	 >> {
  "$id": "758",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "759",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56655
08:47:38	 >> {
  "$id": "760",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "761",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56656
08:47:38	 >> {
  "$id": "762",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "763",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56657
08:47:38	 >> {
  "$id": "764",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "765",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56658
08:47:38	 >> {
  "$id": "766",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "767",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56659
08:47:38	 >> {
  "$id": "768",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "769",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56660
08:47:38	 >> {
  "$id": "770",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "771",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56662
08:47:38	 >> {
  "$id": "772",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "773",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56663
08:47:38	 >> {
  "$id": "774",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "775",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56664
08:47:38	 >> {
  "$id": "776",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:38	 >> {
  "$id": "777",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:38	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56665
08:47:39	 >> {
  "$id": "778",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:39	 >> {
  "$id": "779",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:39	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56666
08:47:39	 >> {
  "$id": "780",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:39	 >> {
  "$id": "781",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:39	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56667
08:47:39	 >> {
  "$id": "782",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:39	 >> {
  "$id": "783",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:39	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56668
08:47:39	 >> {
  "$id": "784",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:39	 >> {
  "$id": "785",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:39	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56669
08:47:39	 >> {
  "$id": "786",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:39	 >> {
  "$id": "787",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:39	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56670
08:47:39	 >> {
  "$id": "788",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:39	 >> {
  "$id": "789",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:39	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56671
08:47:39	 >> {
  "$id": "790",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:39	 >> {
  "$id": "791",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:39	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56672
08:47:39	 >> {
  "$id": "792",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:39	 >> {
  "$id": "793",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:39	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56673
08:47:39	 >> {
  "$id": "794",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:39	 >> {
  "$id": "795",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:39	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56675
08:47:39	 >> {
  "$id": "796",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:39	 >> {
  "$id": "797",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:39	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56676
08:47:39	 >> {
  "$id": "798",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:39	 >> {
  "$id": "799",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:39	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56677
08:47:39	 >> {
  "$id": "800",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:39	 >> {
  "$id": "801",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:39	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56678
08:47:39	 >> {
  "$id": "802",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:39	 >> {
  "$id": "803",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:39	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56679
08:47:39	 >> {
  "$id": "804",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:39	 >> {
  "$id": "805",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:39	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56680
08:47:39	 >> {
  "$id": "806",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:39	 >> {
  "$id": "807",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:39	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56681
08:47:39	 >> {
  "$id": "808",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:39	 >> {
  "$id": "809",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:39	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56682
08:47:39	 >> {
  "$id": "810",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:39	 >> {
  "$id": "811",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:39	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56683
08:47:40	 >> {
  "$id": "812",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:40	 >> {
  "$id": "813",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:40	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56684
08:47:40	 >> {
  "$id": "817",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "819",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "856",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "857",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "862",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "863",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "843",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "845",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "829",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "833",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSnLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "862",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "863",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "843",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "845",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "829",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "833",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadS08:47:40	 >> {
  "$id": "880",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "881",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTisometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
raceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "873",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "875",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "854",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "855",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "877",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "879",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "839",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "841",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "818",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "821",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "889",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "890",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "852",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "853",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "858",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "859",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "872",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "874",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "860",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "861",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "866",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "867",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "885",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "886",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "846",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "847",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "824",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "826",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "831",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "834",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56611
08:47:40	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56654
08:47:40	 >> {
  "$id": "814",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "815",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "884",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "891",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "835",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "837",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "940",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "941",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "842",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "844",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "910",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "911",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "817",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "820",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "823",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "827",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "832",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "836",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "955",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:40	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56678
08:47:40	 >> {
  "$id": "887",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "888",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56670
08:47:40	 >> {
  "$id": "876",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "878",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "828",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "830",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "848",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "850",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "838",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "840",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "914",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "915",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56656
08:47:40	 >> {
  "$id": "822",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "825",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "864",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "865",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "868",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "870",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "912",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "913",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "928",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "929",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "908",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "909",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "849",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "851",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "920",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "954",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "895",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "897",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "899",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "901",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "898",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "900",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "926",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "927",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "894",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "896",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "935",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "936",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "944",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "947",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "937",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "956",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "938",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "939",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "931",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "932",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:40	 >> {
  "$id": "933",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "934",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56637
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56650
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56675
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56648
08:47:40	 >> {
  "$id": "959",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "vision": {
    "$id": "960",
    "$type": "Isometric.Dtos.VisionDto, Isometric.Dtos",
    "Buildings": {
      "$type": "Isometric.Dtos.BuildingAreaDto[,], Isometric.Dtos",
      "$values": [
        [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ],
        [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ],
        [
          null,
          null,
          {
            "$id": "961",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": true,
            "ArePeopleHungry": true
          },
          {
            "$id": "962",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "963",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "964",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "965",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "966",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "967",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "968",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "969",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "970",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "971",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "972",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "973",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "974",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "975",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "976",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "977",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "978",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "979",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "980",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "981",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "982",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "983",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "984",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "985",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "986",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "987",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "988",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "989",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "990",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "991",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "992",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "993",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "994",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "995",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "996",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "997",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "998",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "999",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1000",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1001",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          }
        ],
        [
          null,
          null,
          {
            "$id": "1002",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1003",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1004",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1005",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1006",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1007",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1008",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1009",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1010",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1011",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1012",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          }
        ],
        [
          null,
          null,
          {
            "$id": "1013",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1014",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1015",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1016",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1017",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1018",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1019",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1020",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1021",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1022",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": fmeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          }
        ],
        [
          null,
          null,
          {
            "$id": "1013",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1014",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1015",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1016",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1017",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1018",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1019",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1020",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1021",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            ic.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1021",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1022",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": f08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56681
alse,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "1023",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1024",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1025",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1026",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1027",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1028",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1029",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1030",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1031",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1032",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "1033",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1034",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1035",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1036",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1037",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1038",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1039",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1040",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1041",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1042",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "1043",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1044",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1045",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1046",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1047",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1048",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1049",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1050",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1051",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null,
          null
        ],
        [
          null,
          null,
          null,
          {
            "$id": "1052",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1053",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1054",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1055",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1056",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1057",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1058",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null,
          null,
          null
        ],
        [
          null,
          null,
          null,
          null,
          null,
          null,
          {
            "$id": "1059",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null,
          null,
          null,
          null,
          null,
          null
        ]
      ]
    },
    "Position": {
      "$id": "1060",
      "$type": "Isometric.Core.Vectors.Vector, Isometric.Core.Vectors",
      "X": 1214,
      "Y": 30,
      "SquaredMagnitude": 1474696,
      "Magnitude": 1214.3706188804142
    }
  }
}
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56677
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56680
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56679
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56676
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56672
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56671
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56667
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56668
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56666
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56655
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56665
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56664
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56663
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56662
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56653
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56649
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56659
08:47:41	 >> {
  "$id": "869",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "871",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56633
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56629
08:47:41	 >> {
  "$id": "916",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "917",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:41	 >> {
  "$id": "930",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "958",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56622
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56615
08:47:41	 >> {
  "$id": "921",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "922",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56651
08:47:41	 >> {
  "$id": "892",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "893",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56624
08:47:41	 >> {
  "$id": "882",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "883",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:41	 >> {
  "$id": "923",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "924",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:41	 >> {
  "$id": "906",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "907",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:41	 >> {
  "$id": "918",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "919",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56640
08:47:41	 >> {
  "$id": "942",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "943",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:41	 >> {
  "$id": "904",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "905",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:41	 >> {
  "$id": "902",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "903",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:41	 >> {
  "$id": "925",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "957",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:41	 >> {
  "$id": "949",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1061",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:41	 >> {
  "$id": "945",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "948",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:41	 >> {
  "$id": "944",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "946",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:41	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56617
08:47:41	 >> {
  "$id": "950",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "951",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:41	 >> {
  "$id": "952",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "953",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56645
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56673
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56669
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56658
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56657
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56646
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56660
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56642
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56638
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56634
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56628
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56614
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56643
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56652
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56630
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56626
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56639
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56644
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56641
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56635
08:47:42	 >> {
  "$id": "1062",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1063",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Additional text encountered after finished reading JSON content: {. Path '', line 7, position 1.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.JsonTextReader.Read()\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nRead\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.JsonTextReader\nBoolean Read()",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56625
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56619
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56618
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56636
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56632
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56647
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56631
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56627
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56602
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56623
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56603
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56620
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56616
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56621
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56612
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56610
08:47:42	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56687
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56606
08:47:42	 >> {
  "$id": "1064",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56613
08:47:43	 >> {
  "$id": "1065",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:42	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56605
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56688
08:47:43	 >> {
  "$id": "1066",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1067",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56689
08:47:43	 >> {
  "$id": "1068",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1069",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56690
08:47:43	 >> {
  "$id": "1070",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1071",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56691
08:47:43	 >> {
  "$id": "1072",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1073",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56692
08:47:43	 >> {
  "$id": "1074",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1075",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56693
08:47:43	 >> {
  "$id": "1076",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1077",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56694
08:47:43	 >> {
  "$id": "1078",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1079",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56695
08:47:43	 >> {
  "$id": "1080",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1081",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56696
08:47:43	 >> {
  "$id": "1082",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1083",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56697
08:47:43	 >> {
  "$id": "1084",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1085",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56698
08:47:43	 >> {
  "$id": "1086",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1087",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56699
08:47:43	 >> {
  "$id": "1088",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1089",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56700
08:47:43	 >> {
  "$id": "1090",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1091",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56701
08:47:43	 >> {
  "$id": "1092",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1093",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56702
08:47:43	 >> {
  "$id": "1094",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1095",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56703
08:47:43	 >> {
  "$id": "1096",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1097",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56704
08:47:43	 >> {
  "$id": "1098",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1099",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56705
08:47:43	 >> {
  "$id": "1100",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1101",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56706
08:47:43	 >> {
  "$id": "1102",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1103",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56707
08:47:43	 >> {
  "$id": "1104",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1105",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56708
08:47:43	 >> {
  "$id": "1106",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1107",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56709
08:47:43	 >> {
  "$id": "1108",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1109",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56710
08:47:43	 >> {
  "$id": "1110",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1111",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56711
08:47:43	 >> {
  "$id": "1112",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1113",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56712
08:47:43	 >> {
  "$id": "1114",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1115",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56713
08:47:43	 >> {
  "$id": "1116",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:43	 >> {
  "$id": "1117",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "permission"
}
08:47:43	 >> {
  "$id": "1118",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1119",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:43	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56713
08:47:44	 >> {
  "$id": "1120",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1121",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1124",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1127",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1142",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1143",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1150",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1151",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1162",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1163",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1138",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1139",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1132",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1133",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1128",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1130",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1164",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1165",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1140",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1141",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1146",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1147",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1129",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1131",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1152",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1153",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1154",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1155",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1159",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1160",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1156",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1161",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1122",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1125",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1148",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1149",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1166",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1167",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1144",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1145",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1136",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1137",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1168",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1169",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1157",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1158",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1134",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1135",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1174",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1175",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1170",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1171",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1172",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1173",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 >> {
  "$id": "1123",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1126",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56699
08:47:44	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56709
08:47:44	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56712
08:47:44	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56710
08:47:44	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56702
08:47:44	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56695
08:47:44	 >> {
  "$id": "1176",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1177",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Connection`1 connection) в E:\\projects\\isometric\\Isometric.Server\\RequestManager.cs:строка 49",
    "RemoteStackTraceString": null,
    "RemoteStackIndex": 0,
    "ExceptionMethod": "8\nReadFrom\nNewtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed\nNewtonsoft.Json.Linq.JToken\nNewtonsoft.Json.Linq.JToken ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)",
    "HResult": -2146233088,
    "Source": "Newtonsoft.Json",
    "WatsonBuckets": null
  }
}
08:47:44	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56711
08:47:44	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56691
08:47:44	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56705
08:47:44	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56693
08:47:45	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56688
08:47:45	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56700
08:47:44	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56687
08:47:45	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56698
08:47:44	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56701
08:47:45	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56708
08:47:44	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56707
08:47:45	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56704
08:47:45	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56697
08:47:44	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56689
08:47:45	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56696
08:47:45	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56694
08:47:45	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56706
08:47:44	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56703
08:47:45	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56690
08:47:45	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56692
08:47:45	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56683
08:47:45	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56682
08:47:45	 Closed connection to 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56684
08:47:48	 Accepted connection from 0.0.0.0.0.0.0.0.0.0.255.255.192.168.0.100:56719
08:47:48	 >> {
  "$id": "1178",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true
}
08:47:48	 >> {
  "$id": "1179",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "vision": {
    "$id": "1180",
    "$type": "Isometric.Dtos.VisionDto, Isometric.Dtos",
    "Buildings": {
      "$type": "Isometric.Dtos.BuildingAreaDto[,], Isometric.Dtos",
      "$values": [
        [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ],
        [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ],
        [
          null,
          null,
          {
            "$id": "1181",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": true,
            "ArePeopleHungry": true
          },
          {
            "$id": "1182",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1183",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1184",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1185",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1186",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1187",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1188",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1189",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1190",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "1191",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1192",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1193",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1194",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1195",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1196",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1197",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1198",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1199",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1200",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "1201",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1202",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1203",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1204",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1205",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1206",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1207",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1208",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1209",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1210",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "1211",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1212",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1213",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1214",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1215",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1216",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1217",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1218",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1219",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1220",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1221",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          }
        ],
        [
          null,
          null,
          {
            "$id": "1222",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1223",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1224",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1225",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1226",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1227",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1228",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1229",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1230",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1231",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1232",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          }
        ],
        [
          null,
          null,
          {
            "$id": "1233",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1234",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1235",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1236",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1237",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Underground house",
            "OwnerName": "",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1238",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1239",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1240",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1241",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1242",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "1243",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1244",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1245",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1246",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1247",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1248",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1249",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1250",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1251",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1252",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "1253",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1254",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1255",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1256",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1257",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1258",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1259",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1260",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1261",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1262",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null
        ],
        [
          null,
          null,
          {
            "$id": "1263",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1264",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1265",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1266",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1267",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1268",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1269",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1270",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1271",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null,
          null
        ],
        [
          null,
          null,
          null,
          {
            "$id": "1272",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1273",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1274",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1275",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1276",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1277",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          {
            "$id": "1278",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Plain",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null,
          null,
          null
        ],
        [
          null,
          null,
          null,
          null,
          null,
          null,
          {
            "$id": "1279",
            "$type": "Isometric.Dtos.BuildingAreaDto, Isometric.Dtos",
            "Name": "Forest",
            "OwnerName": "no owner",
            "BuildingTime": {
              "$type": "System.TimeSpan",
              "$value": "00:00:00"
            },
            "IsThereArmy": false,
            "ArePeopleHungry": false
          },
          null,
          null,
          null,
          null,
          null,
          null
        ]
      ]
    },
    "Position": {
      "$id": "1280",
      "$type": "Isometric.Core.Vectors.Vector, Isometric.Core.Vectors",
      "X": 1214,
      "Y": 30,
      "SquaredMagnitude": 1474696,
      "Magnitude": 1214.3706188804142
    }
  }
}
08:47:49	 >> {
  "$id": "1281",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "world width": 2048
}
08:47:50	 >> {
  "$id": "1282",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "data": {
    "$id": "1283",
    "$type": "Isometric.Dtos.BuildingFullDto, Isometric.Dtos",
    "OwnerName": "",
    "Name": "Plain",
    "CreatingArmy": "",
    "FreePeople": 18,
    "Builders": 0,
    "Workers": 0,
    "MaxWorkers": 0,
    "MaxBuilders": 0,
    "PeopleForArmy": 0,
    "ArmyQueueSize": 0,
    "Income": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "LastIncome": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "ArmyPrice": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "Armies": {
      "$type": "System.String[], mscorlib",
      "$values": [
        "10 ()",
        "20 ()"
      ]
    },
    "IsWorkerBuilding": false,
    "IsIncomeBuilding": false,
    "IsArmyBuilding": false,
    "IsFinished": true,
    "ArmyCreationTime": {
      "$type": "System.TimeSpan",
      "$value": "00:00:00"
    },
    "ArmyCreationTimeMax": {
      "$type": "System.TimeSpan",
      "$value": "00:00:00"
    }
  }
}
08:47:50	 >> {
  "$id": "1284",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "data": {
    "$id": "1285",
    "$type": "Isometric.Dtos.BuildingFullDto, Isometric.Dtos",
    "OwnerName": "no owner",
    "Name": "Forest",
    "CreatingArmy": "",
    "FreePeople": 0,
    "Builders": 0,
    "Workers": 0,
    "MaxWorkers": 0,
    "MaxBuilders": 0,
    "PeopleForArmy": 0,
    "ArmyQueueSize": 0,
    "Income": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "LastIncome": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "ArmyPrice": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "Armies": {
      "$type": "System.String[], mscorlib",
      "$values": []
    },
    "IsWorkerBuilding": false,
    "IsIncomeBuilding": false,
    "IsArmyBuilding": false,
    "IsFinished": true,
    "ArmyCreationTime": {
      "$type": "System.TimeSpan",
      "$value": "00:00:00"
    },
    "ArmyCreationTimeMax": {
      "$type": "System.TimeSpan",
      "$value": "00:00:00"
    }
  }
}
08:47:50	 >> {
  "$id": "1286",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1287",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:47:50	 >> {
  "$id": "1288",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:47:50	 >> {
  "$id": "1289",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "data": {
    "$id": "1290",
    "$type": "Isometric.Dtos.BuildingFullDto, Isometric.Dtos",
    "OwnerName": "no owner",
    "Name": "Plain",
    "CreatingArmy": "",
    "FreePeople": 0,
    "Builders": 0,
    "Workers": 0,
    "MaxWorkers": 0,
    "MaxBuilders": 0,
    "PeopleForArmy": 0,
    "ArmyQueueSize": 0,
    "Income": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "LastIncome": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "ArmyPrice": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "Armies": {
      "$type": "System.String[], mscorlib",
      "$values": []
    },
    "IsWorkerBuilding": false,
    "IsIncomeBuilding": false,
    "IsArmyBuilding": false,
    "IsFinished": true,
    "ArmyCreationTime": {
      "$type": "System.TimeSpan",
      "$value": "00:00:00"
    },
    "ArmyCreationTimeMax": {
      "$type": "System.TimeSpan",
      "$value": "00:00:00"
    }
  }
}
08:47:50	 >> {
  "$id": "1291",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "data": {
    "$id": "1292",
    "$type": "Isometric.Dtos.BuildingFullDto, Isometric.Dtos",
    "OwnerName": "no owner",
    "Name": "Plain",
    "CreatingArmy": "",
    "FreePeople": 0,
    "Builders": 0,
    "Workers": 0,
    "MaxWorkers": 0,
    "MaxBuilders": 0,
    "PeopleForArmy": 0,
    "ArmyQueueSize": 0,
    "Income": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "LastIncome": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "ArmyPrice": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "Armies": {
      "$type": "System.String[], mscorlib",
      "$values": []
    },
    "IsWorkerBuilding": false,
    "IsIncomeBuilding": false,
    "IsArmyBuilding": false,
    "IsFinished": true,
    "ArmyCreationTime": {
      "$type": "System.TimeSpan",
      "$value": "00:00:00"
    },
    "ArmyCreationTimeMax": {
      "$type": "System.TimeSpan",
      "$value": "00:00:00"
    }
  }
}
08:47:51	 >> {
  "$id": "1293",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1294",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:47:51	 >> {
  "$id": "1295",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:47:51	 >> {
  "$id": "1296",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "data": {
    "$id": "1297",
    "$type": "Isometric.Dtos.BuildingFullDto, Isometric.Dtos",
    "OwnerName": "no owner",
    "Name": "Plain",
    "CreatingArmy": "",
    "FreePeople": 0,
    "Builders": 0,
    "Workers": 0,
    "MaxWorkers": 0,
    "MaxBuilders": 0,
    "PeopleForArmy": 0,
    "ArmyQueueSize": 0,
    "Income": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "LastIncome": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "ArmyPrice": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "Armies": {
      "$type": "System.String[], mscorlib",
      "$values": []
    },
    "IsWorkerBuilding": false,
    "IsIncomeBuilding": false,
    "IsArmyBuilding": false,
    "IsFinished": true,
    "ArmyCreationTime": {
      "$type": "System.TimeSpan",
      "$value": "00:00:00"
    },
    "ArmyCreationTimeMax": {
      "$type": "System.TimeSpan",
      "$value": "00:00:00"
    }
  }
}
08:47:51	 >> {
  "$id": "1298",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "data": {
    "$id": "1299",
    "$type": "Isometric.Dtos.BuildingFullDto, Isometric.Dtos",
    "OwnerName": "no owner",
    "Name": "Forest",
    "CreatingArmy": "",
    "FreePeople": 0,
    "Builders": 0,
    "Workers": 0,
    "MaxWorkers": 0,
    "MaxBuilders": 0,
    "PeopleForArmy": 0,
    "ArmyQueueSize": 0,
    "Income": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "LastIncome": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "ArmyPrice": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "Armies": {
      "$type": "System.String[], mscorlib",
      "$values": []
    },
    "IsWorkerBuilding": false,
    "IsIncomeBuilding": false,
    "IsArmyBuilding": false,
    "IsFinished": true,
    "ArmyCreationTime": {
      "$type": "System.TimeSpan",
      "$value": "00:00:00"
    },
    "ArmyCreationTimeMax": {
      "$type": "System.TimeSpan",
      "$value": "00:00:00"
    }
  }
}
08:47:51	 >> {
  "$id": "1300",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "data": {
    "$id": "1301",
    "$type": "Isometric.Dtos.BuildingFullDto, Isometric.Dtos",
    "OwnerName": "no owner",
    "Name": "Forest",
    "CreatingArmy": "",
    "FreePeople": 0,
    "Builders": 0,
    "Workers": 0,
    "MaxWorkers": 0,
    "MaxBuilders": 0,
    "PeopleForArmy": 0,
    "ArmyQueueSize": 0,
    "Income": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "LastIncome": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "ArmyPrice": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "Armies": {
      "$type": "System.String[], mscorlib",
      "$values": []
    },
    "IsWorkerBuilding": false,
    "IsIncomeBuilding": false,
    "IsArmyBuilding": false,
    "IsFinished": true,
    "ArmyCreationTime": {
      "$type": "System.TimeSpan",
      "$value": "00:00:00"
    },
    "ArmyCreationTimeMax": {
      "$type": "System.TimeSpan",
      "$value": "00:00:00"
    }
  }
}
08:47:51	 >> {
  "$id": "1302",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "data": {
    "$id": "1303",
    "$type": "Isometric.Dtos.BuildingFullDto, Isometric.Dtos",
    "OwnerName": "no owner",
    "Name": "Forest",
    "CreatingArmy": "",
    "FreePeople": 0,
    "Builders": 0,
    "Workers": 0,
    "MaxWorkers": 0,
    "MaxBuilders": 0,
    "PeopleForArmy": 0,
    "ArmyQueueSize": 0,
    "Income": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "LastIncome": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "ArmyPrice": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "Armies": {
      "$type": "System.String[], mscorlib",
      "$values": []
    },
    "IsWorkerBuilding": false,
    "IsIncomeBuilding": false,
    "IsArmyBuilding": false,
    "IsFinished": true,
    "ArmyCreationTime": {
      "$type": "System.TimeSpan",
      "$value": "00:00:00"
    },
    "ArmyCreationTimeMax": {
      "$type": "System.TimeSpan",
      "$value": "00:00:00"
    }
  }
}
08:47:51	 >> {
  "$id": "1304",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "data": {
    "$id": "1305",
    "$type": "Isometric.Dtos.BuildingFullDto, Isometric.Dtos",
    "OwnerName": "no owner",
    "Name": "Plain",
    "CreatingArmy": "",
    "FreePeople": 0,
    "Builders": 0,
    "Workers": 0,
    "MaxWorkers": 0,
    "MaxBuilders": 0,
    "PeopleForArmy": 0,
    "ArmyQueueSize": 0,
    "Income": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "LastIncome": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "ArmyPrice": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "Armies": {
      "$type": "System.String[], mscorlib",
      "$values": []
    },
    "IsWorkerBuilding": false,
    "IsIncomeBuilding": false,
    "IsArmyBuilding": false,
    "IsFinished": true,
    "ArmyCreationTime": {
      "$type": "System.TimeSpan",
      "$value": "00:00:00"
    },
    "ArmyCreationTimeMax": {
      "$type": "System.TimeSpan",
      "$value": "00:00:00"
    }
  }
}
08:47:51	 >> {
  "$id": "1306",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "upgrades": {
    "$type": "Isometric.Dtos.UpgradeDto[], Isometric.Dtos",
    "$values": [
      {
        "$id": "1307",
        "$type": "Isometric.Dtos.UpgradeDto, Isometric.Dtos",
        "Name": "Underground house",
        "Price": {
          "$type": "System.Single[], mscorlib",
          "$values": [
            50.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
          ]
        },
        "Time": {
          "$type": "System.TimeSpan",
          "$value": "00:00:30"
        },
        "Possibility": 0,
        "RequiredResearches": {
          "$type": "System.String[], mscorlib",
          "$values": []
        }
      },
      {
        "$id": "1308",
        "$type": "Isometric.Dtos.UpgradeDto, Isometric.Dtos",
        "Name": "Wooden house",
        "Price": {
          "$type": "System.Single[], mscorlib",
          "$values": [
            100.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
          ]
        },
        "Time": {
          "$type": "System.TimeSpan",
          "$value": "00:01:30"
        },
        "Possibility": 2,
        "RequiredResearches": {
          "$type": "System.String[], mscorlib",
          "$values": [
            "Wooden architecture"
          ]
        }
      },
      {
        "$id": "1309",
        "$type": "Isometric.Dtos.UpgradeDto, Isometric.Dtos",
        "Name": "Mill",
        "Price": {
          "$type": "System.Single[], mscorlib",
          "$values": [
            500.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
          ]
        },
        "Time": {
          "$type": "System.TimeSpan",
          "$value": "06:00:00"
        },
        "Possibility": 2,
        "RequiredResearches": {
          "$type": "System.String[], mscorlib",
          "$values": [
            "Agriculture"
          ]
        }
      },
      {
        "$id": "1310",
        "$type": "Isometric.Dtos.UpgradeDto, Isometric.Dtos",
        "Name": "Barracks",
        "Price": {
          "$type": "System.Single[], mscorlib",
          "$values": [
            200.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
          ]
        },
        "Time": {
          "$type": "System.TimeSpan",
          "$value": "00:00:20"
        },
        "Possibility": 0,
        "RequiredResearches": {
          "$type": "System.String[], mscorlib",
          "$values": []
        }
      },
      {
        "$id": "1311",
        "$type": "Isometric.Dtos.UpgradeDto, Isometric.Dtos",
        "Name": "Barracks of heavy infantry",
        "Price": {
          "$type": "System.Single[], mscorlib",
          "$values": [
            500.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
          ]
        },
        "Time": {
          "$type": "System.TimeSpan",
          "$value": "01:00:00"
        },
        "Possibility": 2,
        "RequiredResearches": {
          "$type": "System.String[], mscorlib",
          "$values": [
            "Heavy infantry"
          ]
        }
      },
      {
        "$id": "1312",
        "$type": "Isometric.Dtos.UpgradeDto, Isometric.Dtos",
        "Name": "Coal mine",
        "Price": {
          "$type": "System.Single[], mscorlib",
          "$values": [
            1000.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
          ]
        },
        "Time": {
          "$type": "System.TimeSpan",
          "$value": "06:00:00"
        },
        "Possibility": 2,
        "RequiredResearches": {
          "$type": "System.String[], mscorlib",
          "$values": [
            "Coal mines"
          ]
        }
      },
      {
        "$id": "1313",
        "$type": "Isometric.Dtos.UpgradeDto, Isometric.Dtos",
        "Name": "Bakery",
        "Price": {
          "$type": "System.Single[], mscorlib",
          "$values": [
            100.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
          ]
        },
        "Time": {
          "$type": "System.TimeSpan",
          "$value": "00:30:00"
        },
        "Possibility": 2,
        "RequiredResearches": {
          "$type": "System.String[], mscorlib",
          "$values": [
            "Bakeries"
          ]
        }
      },
      {
        "$id": "1314",
        "$type": "Isometric.Dtos.UpgradeDto, Isometric.Dtos",
        "Name": "Spirit house",
        "Price": {
          "$type": "System.Single[], mscorlib",
          "$values": [
            200.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
          ]
        },
        "Time": {
          "$type": "System.TimeSpan",
          "$value": "00:01:00"
        },
        "Possibility": 0,
        "RequiredResearches": {
          "$type": "System.String[], mscorlib",
          "$values": []
        }
      },
      {
        "$id": "1315",
        "$type": "Isometric.Dtos.UpgradeDto, Isometric.Dtos",
        "Name": "Field",
        "Price": {
          "$type": "System.Single[], mscorlib",
          "$values": [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
          ]
        },
        "Time": {
          "$type": "System.TimeSpan",
          "$value": "00:05:00"
        },
        "Possibility": 2,
        "RequiredResearches": {
          "$type": "System.String[], mscorlib",
          "$values": [
            "Agriculture"
          ]
        }
      },
      {
        "$id": "1316",
        "$type": "Isometric.Dtos.UpgradeDto, Isometric.Dtos",
        "Name": "Workshop",
        "Price": {
          "$type": "System.Single[], mscorlib",
          "$values": [
            350.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
          ]
        },
        "Time": {
          "$type": "System.TimeSpan",
          "$value": "06:00:00"
        },
        "Possibility": 2,
        "RequiredResearches": {
          "$type": "System.String[], mscorlib",
          "$values": [
            "Instruments"
          ]
        }
      }
    ]
  }
}
08:47:51	 >> {
  "$id": "1317",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "data": {
    "$id": "1318",
    "$type": "Isometric.Dtos.BuildingFullDto, Isometric.Dtos",
    "OwnerName": "no owner",
    "Name": "Plain",
    "CreatingArmy": "",
    "FreePeople": 0,
    "Builders": 0,
    "Workers": 0,
    "MaxWorkers": 0,
    "MaxBuilders": 0,
    "PeopleForArmy": 0,
    "ArmyQueueSize": 0,
    "Income": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "LastIncome": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "ArmyPrice": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "Armies": {
      "$type": "System.String[], mscorlib",
      "$values": []
    },
    "IsWorkerBuilding": false,
    "IsIncomeBuilding": false,
    "IsArmyBuilding": false,
    "IsFinished": true,
    "ArmyCreationTime": {
      "$type": "System.TimeSpan",
      "$value": "00:00:00"
    },
    "ArmyCreationTimeMax": {
      "$type": "System.TimeSpan",
      "$value": "00:00:00"
    }
  }
}
08:47:52	 >> {
  "$id": "1319",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1320",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:47:52	 >> {
  "$id": "1321",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:47:53	 >> {
  "$id": "1322",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1323",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:47:53	 >> {
  "$id": "1324",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:47:54	 >> {
  "$id": "1325",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1326",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:47:54	 >> {
  "$id": "1327",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:47:55	 >> {
  "$id": "1328",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1329",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:47:55	 >> {
  "$id": "1330",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:47:56	 >> {
  "$id": "1331",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1332",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:47:56	 >> {
  "$id": "1333",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:47:57	 >> {
  "$id": "1334",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1335",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:47:57	 >> {
  "$id": "1336",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:47:58	 >> {
  "$id": "1337",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1338",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:47:58	 >> {
  "$id": "1339",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:47:58	 >> {
  "$id": "1340",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "success": true,
  "output": "\nSuccess\n\n"
}
08:47:59	 >> {
  "$id": "1341",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1342",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:47:59	 >> {
  "$id": "1343",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:48:00	 >> {
  "$id": "1344",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1345",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:48:00	 >> {
  "$id": "1346",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:48:01	 >> {
  "$id": "1347",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1348",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:48:01	 >> {
  "$id": "1349",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:48:02	 >> {
  "$id": "1350",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1351",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:48:02	 >> {
  "$id": "1352",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:48:03	 >> {
  "$id": "1353",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1354",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:48:03	 >> {
  "$id": "1355",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:48:04	 >> {
  "$id": "1356",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1357",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:48:04	 >> {
  "$id": "1358",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:48:05	 >> {
  "$id": "1359",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1360",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:48:05	 >> {
  "$id": "1361",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:48:06	 >> {
  "$id": "1362",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1363",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:48:06	 >> {
  "$id": "1364",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:48:07	 >> {
  "$id": "1365",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1366",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:48:07	 >> {
  "$id": "1367",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:48:08	 >> {
  "$id": "1368",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1369",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:48:08	 >> {
  "$id": "1370",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:48:09	 >> {
  "$id": "1371",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1372",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:48:09	 >> {
  "$id": "1373",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:48:10	 >> {
  "$id": "1374",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1375",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:48:10	 >> {
  "$id": "1376",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:48:11	 >> {
  "$id": "1377",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1378",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:48:11	 >> {
  "$id": "1379",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:48:12	 >> {
  "$id": "1380",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1381",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:48:12	 >> {
  "$id": "1382",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:48:13	 >> {
  "$id": "1383",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1384",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:48:13	 >> {
  "$id": "1385",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:48:14	 >> {
  "$id": "1386",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1387",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:48:14	 >> {
  "$id": "1388",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:48:15	 >> {
  "$id": "1389",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1390",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:48:15	 >> {
  "$id": "1391",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:48:16	 >> {
  "$id": "1392",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1393",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:48:16	 >> {
  "$id": "1394",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:48:17	 >> {
  "$id": "1395",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1396",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:48:17	 >> {
  "$id": "1397",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:48:18	 >> {
  "$id": "1398",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1399",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:48:18	 >> {
  "$id": "1400",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:48:19	 >> {
  "$id": "1401",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "resources": {
    "$id": "1402",
    "$type": "Isometric.Dtos.ResourcesDto, Isometric.Dtos",
    "ResourcesArray": {
      "$type": "System.Single[], mscorlib",
      "$values": [
        1000.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ]
    },
    "FreePeople": 30,
    "MaxPeople": 0
  }
}
08:48:19	 >> {
  "$id": "1403",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "news": {
    "$type": "Isometric.Dtos.NewsDto[], Isometric.Dtos",
    "$values": []
  }
}
08:48:19	 >> {
  "$id": "1404",
  "$type": "System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib",
  "error type": "request",
  "exception": {
    "$id": "1405",
    "$type": "Newtonsoft.Json.JsonReaderException, Newtonsoft.Json",
    "ClassName": "Newtonsoft.Json.JsonReaderException",
    "Message": "Error reading JToken from JsonReader. Path '', line 0, position 0.",
    "Data": null,
    "InnerException": null,
    "HelpURL": null,
    "StackTraceString": "   в Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Load(JsonReader reader, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json, JsonLoadSettings settings)\r\n   в Newtonsoft.Json.Linq.JToken.Parse(String json)\r\n   в Isometric.Server.RequestManager`1.GetResponse(String request, Conne